[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = ">= 3.12, < 3.13"
requests = { extras = ["security"], version = "==2.32.3" }
click = "==8.1.7"
werkzeug = "==3.0.3"
python-dotenv = "==1.0.1"
PyGithub = "==2.3.0"
semver = "==3.0.2"

[tool.poetry.dev-dependencies]
ruff = "0.5.0"

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    # Conflicting with formatting
    "COM812", # Missing ending comma, conflicts with black magic trailing comma
    "ISC001", # Conflicts with ruff format command
    # Disabled rulesets we don't care about those
    "BLE",    # Blind exception catching
    "C90",    # Complexity
    "D1",     # missing docstrings
    "D211",
    "D213",
    "ANN101", # Annotations for self
    "ANN102", # Annotations for cls
    "ANN204", # Return annotations for special methods
    "ANN401", # Forbid Any
    "N801",
    "N802",
    "N803",
    "N805",
    "N806",
    "N811",
    "N812",
    "N814",
    "N815",
    "N816",
    "N818",
    "N999",   # Various naming conventions around case
    "PLR09",  # Too many arguments
    "S101",   # Use of assert ..
]
select = ["ALL"]

[tool.pyright]
typeCheckingMode = "strict"

deprecateTypingAliases = true
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportImplicitStringConcatenation = true
reportPropertyTypeMismatch = true
reportUnnecessaryTypeIgnoreComment = true
reportShadowedImports = true
reportMissingTypeStubs = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
