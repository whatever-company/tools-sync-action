stages:
  - build

cache:
  paths:
    - .venv

gitlab-to-pb:
  stage: build
  image: python:3.6-alpine@sha256:1a345c0c5bcefad9423a40cb23659b361487ae3b216eb3789c91514952988623
  only:
    refs:
      - triggers
      - web
    variables:
      - $PB_STATUS
  variables:
    STATUS: $PB_STATUS
    GL_PROJECT: $PROJECT
  script:
    - apk add gcc musl-dev python3-dev libffi-dev openssl-dev
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install --no-dev

    # TAKE $PB_USERNAME, $PB_PASSWORD, $ZD_USERNAME, $ZD_PASSWORD, $GL_TOKEN, $STATUS, $GL_PROJECT, $FROM_REF, $TO_REF, $GL_ISSUES, $SLACK_URL, $DD_KEY
    # from Env VAR
    - poetry run python dev-sync.py from_gitlab to_productboard to_zendesk to_slack to_datadog

pb-to-gitlab:
  stage: build
  image: python:3.6-alpine@sha256:1a345c0c5bcefad9423a40cb23659b361487ae3b216eb3789c91514952988623
  only:
    refs:
      - triggers
      - web
      - schedules
    variables:
      - $RELEASE
      - $IN_PROGRESS
  script:
    - apk add gcc musl-dev python3-dev libffi-dev openssl-dev
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install --no-dev

    # TAKE $PB_USERNAME, $PB_PASSWORD, $GL_TOKEN and $RELEASE from ENV var
    - poetry run python dev-sync.py from_productboard to_gitlab
